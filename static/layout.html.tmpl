{{ define "header" }}
  <!DOCTYPE html>
  <html lang="en">
    <head>
      <meta charset="utf-8">
      <meta http-equiv="X-UA-Compatible" content="IE=edge">
      <meta name="viewport" content="width=device-width, initial-scale=1">
      <title>My Vibecamp</title>
      <link rel="icon" type="image/png" href="/img/favicon.png">
      <link rel="stylesheet" href="/css/bootstrap.min.css">
      <link rel="stylesheet" href="/css/style.css">
    </head>
    <body>
      <div class="container container-narrow">
{{ end }}



{{ define "footer" }}
      </div>
      <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
      <script src="/js/bootstrap.bundle.min.js"></script>
    </body>
  </html>
{{ end }}



{{ define "nav" }}
  <nav class="navbar navbar-expand-lg navbar-light bg-light mb-4">
    <div class="container-fluid">
      <span class="navbar-brand mb-0 h1">my.vibecamp</span>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>

      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <div class="navbar-nav me-auto mb-2 mb-lg-0">
          <a class="nav-link {{if eq . "home" }}active{{end}}" href="/">Home</a>
          <a class="nav-link {{if eq . "vc2" }}active{{end}}" href="/vc2">vibecamp 2</a>
          <a class="nav-link {{if eq . "logistics" }}active{{end}}" href="/2023-logistics">Logistics</a>
          <!--  <a class="nav-link {{if eq . "ticket" }}active{{end}}" href="/ticket">Ticket</a> -->
          <!--  <a class="nav-link" href="https://vibecamp.xyz/schedule/">Schedule</a> -->
          <!--  <a class="nav-link" href="/img/map.png">Map</a> -->
        </div>
        <div class="navbar-nav">
          <a class="nav-link" href="/signout">Sign Out</a>
        </div>
      </div>
    </div>
  </nav>
{{ end }}


{{ define "flashes" }}
  <div id="flashes">
    {{ range $type, $msgs := . }}
      {{ range $msg := $msgs }}
        <div class="alert alert-{{$type}} alert-dismissible fade show">
          {{ $msg }}
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
      {{ end }}
    {{ end }}
  </div>
{{ end }}

{{ define "logistics-form" }}
  <fieldset>
    <legend>Badges</legend>
    <div class="form-check">
      <input class="form-check-input" type="checkbox" name="badge-checkbox" id="badge-checkbox" {{if or (not .) (and . .Badge)}}checked{{end}}>
      <label class="form-check-label" for="badge-checkbox">
        Would you like a badge at vibecamp 2023?
      </label>
      <br/>
    </div>
  </fieldset>
  <p>Badge creation will happen through the app, we'll announce when it's ready to use!</p>
  <br/>

  <fieldset>
    <legend>Discord</legend>
    <div class="form-check">
      <label class="form-check-label" for="discord-name">
        Add your discord handle (including #) to receive the 2023 Attendee role in the vibecamp server.
      </label>
      <input type="text" class="form-control" name="discord-name" id="discord-name" value="{{if and . .DiscordName}}{{.DiscordName}}{{end}}"/>
      <br/>
    </div>
  </fieldset>

  <fieldset>
    <legend>Dietary Restrictions</legend>
    <p>
      Check all that apply:
    </p>

    <div class="form-check">
      <input class="form-check-input" type="checkbox" name="vegetarian" id="veg" {{if and . .Vegetarian }}checked{{end}}>
      <label class="form-check-label" for="veg">
        Vegetarian
      </label>
    </div>

    <div class="form-check">
      <input class="form-check-input" type="checkbox" name="glutenfree" id="gf" {{if and . .GlutenFree }}checked{{end}}>
      <label class="form-check-label" for="gf">
        Gluten free
      </label>
    </div>

    <div class="form-check mb-4">
      <input class="form-check-input" type="checkbox" name="lactose" id="lactose" {{ if and . .LactoseIntolerant }}checked{{end}}>
      <label class="form-check-label" for="lactose">
        Lactose intolerant
      </label>
    </div>

    <div class="mb-3">
      <label for="comments" class="form-label">Other considerations (e.g. allergies)</label>
      <textarea class="form-control" id="comments" name="comments" rows="3">{{ if and . .FoodComments}}{{.FoodComments}}{{end}}</textarea>
    </div>
  </fieldset>
{{ end }}

{{ define "2023-transport-form" }}
  <script type="text/javascript">
    // on page load set all form elements to their golang values
    function onLoad() {
      // set early-arrival select value to EarlyArrival or blank
      document.getElementById("early-arrival").value = "{{if and . .EarlyArrival}}{{.EarlyArrival}}{{else}}{{end}}";

      // const assistanceTo = {{if and . .TravelFromAirport}}true{{else}}false{{end}};
      const assistanceFrom = {{if and . .AssistanceFromCamp}}true{{else}}false{{end}};

      // set assistance-to checked
      // document.getElementById("assistance-to-camp").checked = assistanceTo;

      // remove hidden from travel-method-div
      document.getElementById("travel-method-div").classList.remove("hidden");
      const travelMethod = "{{if and . .TravelMethod}}{{.TravelMethod}}{{else}}{{end}}";
      document.getElementById("travel-method").value = travelMethod;

      // if they're flying, show the flight info divs based on whether
      // they have where they're flying into set
      if (travelMethod === "Flying") {
        // get the travel from airport div, show it and set its value from golang
        const travelFromAirport = "{{if and . .TravelFromAirport}}{{.TravelFromAirport}}{{else}}{{end}}";
        document.getElementById("travel-from-airport").value = travelFromAirport;
        document.getElementById("travel-from-airport-div").classList.remove("hidden");

        // if travelFromAirport is Yes, show the travel from airport yes div
        if (travelFromAirport === "Yes") {
          document.getElementById("travel-from-airport-yes-div").classList.remove("hidden");
        } else {
          // get the flying into div, show it and set its value from golang
          const flyingInto = "{{if and . .FlyingInto}}{{.FlyingInto}}{{else}}{{end}}";
          document.getElementById("flying-into").value = flyingInto;
          document.getElementById("flying-into-div").classList.remove("hidden");
          if (flyingInto === "Baltimore") {
            // remove baltimore arrival time div and set select to FlightArrivalTime or blank
            document.getElementById("baltimore-arrival-time-div").classList.remove("hidden");
            document.getElementById("flight-arrival-time").value = "{{if and . .FlightArrivalTime}}{{.FlightArrivalTime}}{{else}}{{end}}";
          } else if (flyingInto === "Philadelphia") {
            // remove philly arrival time div and set select to FlightArrivalTime or blank
            document.getElementById("philly-arrival-time-div").classList.remove("hidden");
            document.getElementById("flight-arrival-time").value = "{{if and . .FlightArrivalTime}}{{.FlightArrivalTime}}{{else}}{{end}}";
          } else if (flyingInto === "Other") {
            // remove hidden from wrong-city-redirect-div
            document.getElementById("wrong-city-redirect-div").classList.remove("hidden");
            // set value of wrong-city-redirect to WrongCityRedirect and remove hidden from the warning if No
            document.getElementById("wrong-city-redirect").value = "{{if and . .WrongCityRedirect}}{{.WrongCityRedirect}}{{else}}{{end}}";
            if (document.getElementById("wrong-city-redirect").value === "No") {
              document.getElementById("wrong-city-redirect-warning").classList.remove("hidden");
            }
          }
        }
      } else if (travelMethod === "Own Vehicle") {
        // remove hidden from rv camper, vehicle arrival date, and vehicle arrival time divs,
        // set checked and their values respectively from golang
        document.getElementById("rv-camper-div").classList.remove("hidden");
        document.getElementById("vehicle-arrival-div").classList.remove("hidden");
        // set rv camper checked from variable value
        document.getElementById("rv-camper").value = {{if and . .RVCamper}}{{.RVCamper}}{{end}};
        // split VehicleArrival into date and time by space and set to respective values
        const vehicleArrival = "{{if and . .VehicleArrival}}{{.VehicleArrival}}{{else}}{{end}}";
        const vehicleArrivalSplit = vehicleArrival.split(" ");
        document.getElementById("vehicle-arrival-day").value = vehicleArrivalSplit[0];
        document.getElementById("vehicle-arrival-time").value = vehicleArrivalSplit[1];
      }

      // set assistance-from checked from variable value
      document.getElementById("assistance-from-camp").checked = assistanceFrom;

      if (assistanceFrom) {
        // remove hidden from leaving-from-div
        document.getElementById("leaving-from-div").classList.remove("hidden");
        // set flying-from to value or none if assistance from is true
        document.getElementById("leaving-from").value = "{{if and . .LeavingFrom}}{{.LeavingFrom}}{{else}}{{end}}";
        // if leaving from is other, remove hidden from the warning div. else if leaving from is not blank, remove hidden from city-arrival-time-div
        if (document.getElementById("leaving-from").value === "Other") {
          document.getElementById("leaving-from-warning").classList.remove("hidden");
        } else if (document.getElementById("leaving-from").value !== "") {
          document.getElementById("city-arrival-time-div").classList.remove("hidden");
        }

        // set city-arrival-time to CityArrivalTime or none
        document.getElementById("city-arrival-time").value = "{{if and . .CityArrivalTime}}{{.CityArrivalTime}}{{else}}{{end}}";
      }

      // set sleeping-bag-rentals from variable value or 0
      document.getElementById("sleeping-bag-rentals").value = "{{if and . .SleepingBagRentals}}{{.SleepingBagRentals}}{{else}}0{{end}}";
      // do the same for sheet-rentals
      document.getElementById("sheet-rentals").value = "{{if and . .SheetRentals}}{{.SheetRentals}}{{else}}0{{end}}";
      // andn the same for pillow-rentals
      document.getElementById("pillow-rentals").value = "{{if and . .PillowRentals}}{{.PillowRentals}}{{else}}0{{end}}";
    }

    // onAssistanceToChange takes a boolean value and shows/hides the travel method div
    function onAssistanceToChange(value) {
      if (value) {
        document.getElementById("travel-method-div").classList.remove("hidden");
      } else {
        document.getElementById("travel-method-div").classList.add("hidden");
      }
    }

    // onTravelFromAirportChange takes a string value of Yes or No & shows the appropriate div (flying into for no & travel-from-airport-yes-div for yes)
    function onTravelFromAirportChange(value) {
      if (value === "Yes") {
        document.getElementById("flying-into-div").classList.add("hidden");
        document.getElementById("travel-from-airport-yes-div").classList.remove("hidden");
      } else {
        document.getElementById("flying-into-div").classList.remove("hidden");
        document.getElementById("travel-from-airport-yes-div").classList.add("hidden");
      }
    }

    // onFlyingIntoChange takes a string value of Baltimore, where it shows
    // the baltimore-arrival-time div and hides the other two
    // Philadelphia, where it shows the philly-arrival-time div and hides the other two
    // and Other, where it shows wrong-city-redirect-div
    function onFlyingIntoChange(value) {
      if (value === "Baltimore") {
        document.getElementById("baltimore-arrival-time-div").classList.remove("hidden");
        document.getElementById("philly-arrival-time-div").classList.add("hidden");
        document.getElementById("wrong-city-redirect-div").classList.add("hidden");
      } else if (value === "Philadelphia") {
        document.getElementById("baltimore-arrival-time-div").classList.add("hidden");
        document.getElementById("philly-arrival-time-div").classList.remove("hidden");
        document.getElementById("wrong-city-redirect-div").classList.add("hidden");
      } else {
        document.getElementById("baltimore-arrival-time-div").classList.add("hidden");
        document.getElementById("philly-arrival-time-div").classList.add("hidden");
        document.getElementById("wrong-city-redirect-div").classList.remove("hidden");
      }
    }

    // onWrongCityRedirectChange takes a boolean value and shows/hides the wrong-city-rediect-info div
    function onWrongCityRedirectChange(value) {
      if (value === "No") {
        document.getElementById("wrong-city-redirect-info").classList.remove("hidden");
      } else {
        document.getElementById("wrong-city-redirect-info").classList.add("hidden");
      }
    }

    // onTravelMethodChanges takes a string of Flying or Own Vehicle, and shows/hides the travel from airport div or
    // the vehicle-arrival-time, vehicle-arrival-day, and rv-camper-div divs
    function onTravelMethodChange(value) {
      if (value === "Flying") {
        document.getElementById("travel-from-airport-div").classList.remove("hidden");
        document.getElementById("vehicle-arrival-div").classList.add("hidden");
        document.getElementById("rv-camper-div").classList.add("hidden");
      } else if (value === "Own Vehicle") {
        document.getElementById("travel-from-airport-div").classList.add("hidden");
        document.getElementById("travel-from-airport-yes-div").classList.add("hidden");
        document.getElementById("flying-into-div").classList.add("hidden");
        document.getElementById("vehicle-arrival-div").classList.remove("hidden");
        document.getElementById("rv-camper-div").classList.remove("hidden");
        document.getElementById("baltimore-arrival-time-div").classList.add("hidden");
        document.getElementById("philly-arrival-time-div").classList.add("hidden");
        document.getElementById("wrong-city-redirect-div").classList.add("hidden");
      }
    }

    // onAssistanceFromChange takes a boolean value and shows/hides the leaving-from-div
    function onAssistanceFromChange(value) {
      if (value) {
        document.getElementById("leaving-from-div").classList.remove("hidden");
      } else {
        document.getElementById("leaving-from-div").classList.add("hidden");
        // hide city arrival time div
        document.getElementById("city-arrival-time-div").classList.add("hidden");
      }
    }

    // onLeavingFromChange takes a string value, where it shows/hides the city-arrival-time-div for
    // Baltimore or Philadelphia, and shows leaving-from-warning if Other
    function onLeavingFromChange(value) {
      if (value === "Baltimore") {
        document.getElementById("city-arrival-time-div").classList.remove("hidden");
        document.getElementById("leaving-from-warning").classList.add("hidden");
      } else if (value === "Philadelphia") {
        document.getElementById("city-arrival-time-div").classList.remove("hidden");
        document.getElementById("leaving-from-warning").classList.add("hidden");
      } else {
        document.getElementById("city-arrival-time-div").classList.add("hidden");
        document.getElementById("leaving-from-warning").classList.remove("hidden");
      }
    }
  </script>
  <fieldset>
    <legend>Early Arrival</legend>
    <p>
      Would you like to arrivate at vibecamp early? We have a limited number
      of early spots and you must receive approval from the organizers. Priority
      will be given to official volunteers & project hosts. If you are interested,
      please select your preferred arrival time below.
    </p> 
    // arrival starts at noon on thurs for everyone else
    // day of arrival after this - not sure we need it - axe it yes
    <div class="form-group row justify-content-center">
      <div class="col-sm-5">
        <select name="early-arrival" id="early-arrival" class="form-select" style="text-align: left;">
          <option value selected hidden></option>
          <option value="Tuesday Afternoon">Tuesday Afternoon</option>
          <option value="Wednesday Morning">Wednesday Morning</option>
          <option value="Wednesday Afternoon">Wednesday Afternoon</option>
        </select>
      </div>
    </div>

    <p>
      Arrival starts at noon on Thursday, June 15 for everyone else.
    </p>

    <div class="form-group row justify-content-center">
      <div class="col-sm-5">
        <select name="day-of-arrival" id="day-of-arrival" class="form-select" style="text-align: left;">
          <option value selected hidden></option>
          <option value="Wednesday">Wednesday</option>
          <option value="Thursday">Thursday</option>
          <option value="Friday">Friday</option>
          <option value="Saturday">Saturday</option>
        </select>
      </div>
    </div>
  </fieldset>
  <br />
  <fieldset>
    <legend>Transportation</legend>
    <p>We have a couple of questions regarding transportation to and from vibecamp</p>

    <div class="form-group row form-top-margin" id="travel-method-div">
      <label class="col-sm-9 col-form-label" for="travel-method">
        How will you be traveling to vibecamp?
      </label>
      <div class="col-sm-3">
        <select name="travel-method" id="travel-method" class="form-select" onChange="onTravelMethodChange(this.value)" style="text-align: right;">
          <option value selected hidden></option>
          <option value="Flying">Flying</option>
          <option value="Own Vehicle">Driving own vehicle</option>
        </select>
      </div>
    </div>

    <div class="form-group row hidden form-top-margin" id="travel-from-airport-div">
      <label class="col-sm-9 col-form-label" for="travel-from-airport">
        Do you already know how you will be traveling between the airport and Camp Ramblewood?
      </label>
      <!-- yes no select named travel-from-airport with onChange function onTravelFromAirportChange -->
      <div class="col-sm-3">
        <select name="travel-from-airport" id="travel-from-airport" class="form-select" onChange="onTravelFromAirportChange(this.value)" style="text-align: right;">
          <option value selected hidden></option>
          <option value="Yes">Yes</option>
          <option value="No">No</option>
        </select>
      </div>
    </div>

    <!-- hidden div for travel-from-airport-yes asking them to switch to driving if they are renting a car -->
    <div class="form-group row hidden form-top-margin" id="travel-from-airport-yes-div">
      <label class="col-sm-9 col-form-label" for="travel-from-airport-yes">
        If you are renting a car, please switch your travel method choice above to "Driving Own Vehicle".
      </label>
    </div>

    <div class="form-group row hidden form-top-margin" id="flying-into-div">
      <label class="col-sm-9 col-form-label" for="flying-into">
        Maybe we can help, which airport will you be flying into?
      </label>
      <div class="col-sm-3">
        <select name="flying-into" id="flying-into" class="form-select" onChange="onFlyingIntoChange(this.value)" style="text-align: right;">
          <option value selected hidden></option>
          <option value="Baltimore">Baltimore</option>
          <option value="Philadelphia">Philadelphia</option>
          <option value="Other">Other</option>
        </select>
      </div>
    </div>

    <!-- if not flying into Baltimore or Philadelphia, ask if they can redirect their flight with a yes no select for wrong-city-redirect and a wrong-city-redirect hidden div -->
    <div class="form-group row hidden form-top-margin" id="wrong-city-redirect-div">
      <label class="col-sm-9 col-form-label" for="wrong-city-redirect">
        Can you redirect your flight to Baltimore or Philadelphia?
      </label>
      <div class="col-sm-3">
        <select name="wrong-city-redirect" id="wrong-city-redirect" class="form-select" onChange="onWrongCityRedirectChange(this.value)" style="text-align: right;">
          <option value selected hidden></option>
          <option value="Yes">Yes</option>
          <option value="No">No</option>
        </select>
      </div>
    </div>

    <!-- if they cannot redirect their flight, show an important info box telling them to contact DreadCanary with details -->
    <div class="alert alert-danger hidden form-top-margin" role="alert" id="wrong-city-redirect-info"> 
      <strong>Important!</strong> If you cannot redirect your flight, please contact DreadCanary with your flight details and situation.
    </div>

    <!-- 
    if flying into Baltimore, ask with a select for flight-arrival-time for their flight time in blocks of
    Before 10:30 AM
    Between 10:30 AM and 2:30 PM
    Between 2:30 PM and 4:30 PM
    Later than 4:30 PM
    -->
    <div class="form-group row hidden form-top-margin" id="baltimore-arrival-time-div">
      <label class="col-sm-9 col-form-label" for="flight-arrival-time">
        What time will you be arriving in Baltimore?
      </label>
      <div class="col-sm-3">
        <select name="flight-arrival-time" id="flight-arrival-time" class="form-select" style="text-align: right;">
          <option value selected hidden></option>
          <option value="Before 10:30 AM">Before 10:30 AM</option>
          <option value="Between 10:30 AM and 2:30 PM">10:30 AM-2:30 PM</option>
          <option value="Between 2:30 PM and 4:30 PM">Between 2:30 PM and 4:30</option>
          <option value="Later than 4:30 PM">Later than 4:30</option>
        </select>
      </div>
    </div>

    <!--
    if flying into Philadelphia, ask with a select for flight-arrival-time for their flight time in blocks of
    Before noon
    Between noon and 2 PM
    Between 2 PM and 4 PM
    Later than 4 PM
    -->
    <div class="form-group row hidden form-top-margin" id="philly-arrival-time-div">
      <label class="col-sm-9 col-form-label" for="flight-arrival-time">
        What time will you be arriving in Philadelphia?
      </label>
      <div class="col-sm-3">
        <select name="flight-arrival-time" id="flight-arrival-time" class="form-select" style="text-align: right;">
          <option value selected hidden></option>
          <option value="Before noon">Before noon</option>
          <option value="Between noon and 2 PM">Between noon and 2</option>
          <option value="Between 2 PM and 4 PM">Between 2 PM and 4</option>
          <option value="Later than 4 PM">Later than 4</option>
        </select>
      </div>
    </div>

    <!-- yes no select for rv-camper asking if they are driving an RV or Camper -->
    <div class="form-group row hidden form-top-margin" id="rv-camper-div">
      <label class="col-sm-9 col-form-label" for="rv-camper">
        Are you driving an RV or Camper?
      </label>
      <div class="col-sm-3">
        <select name="rv-camper" id="rv-camper" class="form-select" onChange="onRvCamperChange(this.value)" style="text-align: right;">
          <option value selected hidden></option>
          <option value="Yes">Yes</option>
          <option value="No">No</option>
        </select>
      </div>
    </div>

    <!-- 
    if they are driving their own vehicle, ask with a select for vehicle-arrival-day what day they will be arriving, between Wednesday and Saturday
    -->
    <div id="vehicle-arrival-div" class="hidden">
      <div class="form-group row form-top-margin" id="vehicle-arrival-day-div">
        <label class="col-sm-9 col-form-label" for="vehicle-arrival-day">
          What day will you be arriving?
        </label>
        <div class="col-sm-3">
          <select name="vehicle-arrival-day" id="vehicle-arrival-day" class="form-select" style="text-align: right;">
            <option value selected hidden></option>
            <option value="Wednesday">Wednesday</option>
            <option value="Thursday">Thursday</option>
            <option value="Friday">Friday</option>
            <option value="Saturday">Saturday</option>
          </select>
        </div>
      </div>

      <!--
      if they are driving their own vehicle & arriving on fri or sat, ask with a select for vehicle-arrival-time what time they will be arriving, in blocks of
      30 minutes between 8 AM and 8 PM, i.e. 8:00-8:30AM, 8:30-9:00AM. if they arrive on thurs or weds, the 8am to noon blocks are not available
      -->
      <div class="form-group row form-top-margin" id="vehicle-arrival-time-div">
        <label class="col-sm-9 col-form-label" for="vehicle-arrival-time">
          What time are you planning on arriving (if you know)?
        </label>
        <div class="col-sm-3">
          <select name="vehicle-arrival-time" id="vehicle-arrival-time" class="form-select" style="text-align: right;">
            <option value selected hidden></option>
            <option value="8:00-8:30 AM">8:00-8:30</option>
            <option value="8:30-9:00 AM">8:30-9:00</option>
            <option value="9:00-9:30 AM">9:00-9:30</option>
            <option value="9:30-10:00 AM">9:30-10:00</option>
            <option value="10:00-10:30 AM">10:00-10:30</option>
            <option value="10:30-11:00 AM">10:30-11:00</option>
            <option value="11:00-11:30 AM">11:00-11:30</option>
            <option value="11:30-12:00 PM">11:30-12:00</option>
            <option value="12:00-12:30 PM">12:00-12:30</option>
            <option value="12:30-1:00 PM">12:30-1:00</option>
            <option value="1:00-1:30 PM">1:00-1:30</option>
            <option value="1:30-2:00 PM">1:30-2:00</option>
            <option value="2:00-2:30 PM">2:00-2:30</option>
            <option value="2:30-3:00 PM">2:30-3:00</option>
            <option value="3:00-3:30 PM">3:00-3:30</option>
            <option value="3:30-4:00 PM">3:30-4:00</option>
            <option value="4:00-4:30 PM">4:00-4:30</option>
            <option value="4:30-5:00 PM">4:30-5:00</option>
            <option value="5:00-5:30 PM">5:00-5:30</option>
            <option value="5:30-6:00 PM">5:30-6:00</option>
            <option value="6:00-6:30 PM">6:00-6:30</option>
            <option value="6:30-7:00 PM">6:30-7:00</option>
            <option value="7:00-7:30 PM">7:00-7:30</option>
            <option value="7:30-8:00 PM">7:30-8:00</option>
          </select>
        </div>
      </div>
    </div>
    <br />


    <!-- checkbox for assistance-from-camp asking if they need assistance leaving vibecamp -->
    <div class="form-check">
      <label class="form-check-label" for="assistance-from-camp">
        Do you need assistance traveling from vibecamp to the airport?
      </label>
      <input onChange="onAssistanceFromChange(this.checked)" class="form-check-input" type="checkbox" name="assistance-from-camp" id="assistance-from-camp" {{if and . .AssistanceFromCamp }}checked{{end}}>
    </div>

    <!-- select for leaving-from asking if they are flying out of Baltimore, Philadelphia, or Other -->
    <div class="form-group row hidden form-top-margin" id="leaving-from-div">
      <label class="col-sm-9 col-form-label" for="leaving-from">
        Where will you be flying out of?
      </label>
      <div class="col-sm-3">
        <select name="leaving-from" id="leaving-from" class="form-select" onChange="onLeavingFromChange(this.value)" style="text-align: right;">
          <option value selected hidden></option>
          <option value="Baltimore">Baltimore</option>
          <option value="Philadelphia">Philadelphia</option>
          <option value="Other">Other</option>
        </select>
      </div>
    </div>

    <!-- if they are not flying out of Baltimore or Philadelphia, show a warning message that we cannot provide transportation to other locations -->
    <div id="leaving-from-warning" class="alert alert-warning hidden form-top-margin" role="alert">
      We are unable to provide transportation to airports outside of Baltimore and Philadelphia. Please make your own arrangements or contact us for more information.
    </div>
  
    <!-- select for city-arrival-time with 30 minute blocks from 8 AM to 8 PM, i.e. 8:00-8:30AM, 8:30-9:00AM, etc. mark both AM & PM if necessary -->
    <!-- update to be 10AM - 4PM ish -->
    <div class="form-group row hidden form-top-margin" id="city-arrival-time-div">
      <label class="col-sm-9 col-form-label" for="city-arrival-time">
        What time do you need to be at the airport?
      </label>
      <div class="col-sm-3">
        <select name="city-arrival-time" id="city-arrival-time" class="form-select" style="text-align: right;">
          <option value selected hidden></option>
          <option value="8:00-8:30 AM">8:00-8:30</option>
          <option value="8:30-9:00 AM">8:30-9:00</option>
          <option value="9:00-9:30 AM">9:00-9:30</option>
          <option value="9:30-10:00 AM">9:30-10:00</option>
          <option value="10:00-10:30 AM">10:00-10:30</option>
          <option value="10:30-11:00 AM">10:30-11:00</option>
          <option value="11:00-11:30 AM">11:00-11:30</option>
          <option value="11:30-12:00 PM">11:30-12:00</option>
          <option value="12:00-12:30 PM">12:00-12:30</option>
          <option value="12:30-1:00 PM">12:30-1:00</option>
          <option value="1:00-1:30 PM">1:00-1:30</option>
          <option value="1:30-2:00 PM">1:30-2:00</option>
          <option value="2:00-2:30 PM">2:00-2:30</option>
          <option value="2:30-3:00 PM">2:30-3:00</option>
          <option value="3:00-3:30 PM">3:00-3:30</option>
          <option value="3:30-4:00 PM">3:30-4:00</option>
          <option value="4:00-4:30 PM">4:00-4:30</option>
          <option value="4:30-5:00 PM">4:30-5:00</option>
          <option value="5:00-5:30 PM">5:00-5:30</option>
          <option value="5:30-6:00 PM">5:30-6:00</option>
          <option value="6:00-6:30 PM">6:00-6:30</option>
          <option value="6:30-7:00 PM">6:30-7:00</option>
          <option value="7:00-7:30 PM">7:00-7:30</option>
          <option value="7:30-8:00 PM">7:30-8:00</option>
        </select>
      </div>
    </div>
  </fieldset>
  <br/>

  <fieldset>
    <legend>Bedding</legend>
    <p>
      We also have some questions about bedding, for both cabin & camping tickets. For those with Cabin tickets,
      Ramblewood provides only bare twin XL mattresses, so we're each responsible for bringing our own bedding. 
      Of course this is also true if you're camping. Would you like to arrange to rent bedding for the weekend?
      We'll be offering sleeping bags, pillows, light cotton blankets, and fitted/flat sheets.
    </p>

    <!-- number input for sleeping-bag-rentals asking how many sleeping bags they would like to rent -->
    <div class="form-group row form-top-margin align-items-center">
      <label class="col-sm-9 col-form-label" for="sleeping-bag-rentals">
        How many sleeping bags do you anticipate requesting to rent? They will cost approximately $35 each.
      </label>
      <div class="col-sm-3">
        <input type="number" name="sleeping-bag-rentals" id="sleeping-bag-rentals" class="form-control" style="text-align: right;" min="0" max="10" value="{{ or .SleepingBagRentals 0 }}">
      </div>
    </div>

    <!-- number input for sheet-rentals asking how many sheet/blanket combos they would like to rent -->
    <div class="form-group row form-top-margin align-items-center">
      <label class="col-sm-9 col-form-label" for="sheet-rentals">
        How many sheet/blanket combos do you anticipate requesting to rent? They will cost approximately $50 each.
      </label>
      <div class="col-sm-3">
        <input type="number" name="sheet-rentals" id="sheet-rentals" class="form-control" style="text-align: right;" min="0" max="10" value="{{ or .SheetRentals 0 }}">
      </div>
    </div>

    <!-- number input for pillow-rentals asking how many pillows they would like to rent for 15 -->
    <div class="form-group row form-top-margin align-items-center">
      <label class="col-sm-9 col-form-label" for="pillow-rentals">
        How many pillows (including pillow cases) do you anticipate requesting to rent? They will cost approximately $15 each.
      </label>
      <div class="col-sm-3">
        <input type="number" name="pillow-rentals" id="pillow-rentals" class="form-control" style="text-align: right;" min="0" max="10" value="{{ or .PillowRentals 0 }}">
      </div>
    </div>
  </fieldset>
  <br/>

  <script type="text/javascript" defer>
    onLoad();
  </script>
{{ end }}